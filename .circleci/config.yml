version: 2.1
orbs:
  lumos: hevodata/lumos@dev:alpha

parameters:
  GHA_Actor:
    type: string
    default: ""
  GHA_Action:
    type: string
    default: ""
  GHA_Event:
    type: string
    default: ""
  GHA_Meta:
    type: string
    default: ""
  release_build_trigger:
    description: Flag for release build pipeline.trigger_source
    type: boolean
    default: false
  skip_tests:
    description: Flag to manage skipping of test execution
    type: boolean
    default: false
  target_branch:
    description: Regex for target branch (main branches)
    type: string
    default: "^(dev)|^(release*)"
  hotfix_branch_cut:
    description: Flag to manage if hotfix branch cut
    type: boolean
    default: false
  debug_release_branch_cut:
    description: Flag to manage if debug release branch cut
    type: boolean
    default: false
  release_branch_cut:
    description: Flag to manage if release branch cut
    type: boolean
    default: false

jobs:
  build-jar:
    executor: lumos/java-executor
    working_directory: ~/project/
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Set Build tool as env variable
          description: Sets build tool of gradle v/s maven
          command: echo "export BUILD_TOOL=gradle" >> $BASH_ENV
      - lumos/ci_env_setup
      - lumos/setup_java
      - lumos/spotless
      - lumos/update_version_and_build:
          release_build_trigger: << pipeline.parameters.release_build_trigger >>
          target_branch: << pipeline.parameters.target_branch >>
          skip_tests: << pipeline.parameters.skip_tests >>
      - lumos/sonar_scan:
          release_build_trigger: << pipeline.parameters.release_build_trigger >>
          target_branch: << pipeline.parameters.target_branch >>
      - when:
          condition: << pipeline.parameters.release_build_trigger >>
          steps:
            - lumos/push_tag

workflows:
  build-project:
    when:
      and:
        - not: << pipeline.parameters.release_build_trigger >>
        - not: << pipeline.parameters.release_branch_cut >>
        - not: << pipeline.parameters.debug_release_branch_cut >>
        - not: << pipeline.parameters.hotfix_branch_cut >>
    jobs:
      - build-jar:
          name: Build project
          context:
            - org-global
            - env-test

  Perform Branch cut:
    when: << pipeline.parameters.release_branch_cut >>
    jobs:
      - lumos/perform-branch-cut:
          context:
            - org-global
            - env-us3
          filters:
            branches:
              only: dev

  Release artifact:
    when:
      and:
        - equal: [ "api", << pipeline.trigger_source >> ]
        - << pipeline.parameters.release_build_trigger >>
    jobs:
      - build-jar:
          name: Build release candidate
          context:
            - org-global
            - env-us3
          filters:
            branches:
              only: /^release\/.*/


  Perform Debug Release Branch Cut:
    when: << pipeline.parameters.debug_release_branch_cut >>
    jobs:
      - lumos/perform-debug-branch-cut:
          context:
            - org-global
            - env-us3
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/

  Perform Hotfix Branch Cut:
    when: << pipeline.parameters.hotfix_branch_cut >>
    jobs:
      - lumos/perform-hotfix-branch-cut:
          context:
            - org-global
            - env-us3
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
