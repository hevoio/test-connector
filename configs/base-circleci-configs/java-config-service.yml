version: 2.1

setup: true

orbs:
  continuation: circleci/continuation@1
  lumos: hevodata/lumos@dev:feat/test

parameters:
  target_branch:
    description: Regex for target branch (main branches)
    type: string
    default: "^(dev)|^(release*)"
  environment:
    type: string
    default: "preprod"
  image_tag:
    description: Image tag to be deployed
    type: string
    default: ""
  deploy_pipeline:
    description: Flag to control deployment workflow via API
    type: boolean
    default: false
  ansible-branch:
    description: Ansible branch to use for configs
    type: string
    default: "master"
  release_build_trigger:
    description: Flag for release build pipeline.trigger_source
    type: boolean
    default: false
  services_to_build:
    description: Comma separated services to be built
    type: string
    default: "service_name_here"
  task_def_template_branch:
    description: Branch of orb repo from which to pick task-definition template
    type: string
    default: "dev"
  skip_tests:
    description: Flag to manage skipping of test execution
    type: boolean
    default: false
  hotfix_branch_cut:
    description: Flag to manage if hotfix branch cut
    type: boolean
    default: false
  debug_release_branch_cut:
    description: Flag to manage if debug release branch cut
    type: boolean
    default: false
  release_branch_cut:
    description: Flag to manage if release branch cut
    type: boolean
    default: false
  ecs_service_update_required:
    description: Flag to manage if new/existing ECS service to be created/updated
    type: boolean
    default: true
jobs:
  generate_dynamic_configuration:
    executor: lumos/deploy-executor
    steps:
      - checkout
      - lumos/build_services_command:
          services_to_build: <<pipeline.parameters.services_to_build>>
      - continuation/continue:
          configuration_path: .circleci/generated-config.yml
          parameters: '{"ecs_service_update_required":<<pipeline.parameters.ecs_service_update_required>>
            }'

workflows:
  Generate Config:
    jobs:
      - generate_dynamic_configuration:
          name: Generate CI configuration